<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- home -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<!-- /WEB-INF/views/home -->
		<beans:property name="suffix" value=".jsp" />
		<!-- /WEB-INF/views/home.jsp -->
		<beans:property name="order" value="1"></beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
			<!-- Advice 역할 객체 생성 -->
<!-- 	

	<beans:bean class="com.iu.s3.aop.Card" id="card"></beans:bean>
	
	<aop:config>
		<aop:aspect ref="card">
			<aop:pointcut expression="execution(* com.iu.s3.aop.Transfer.*())" id="trans"/>
			<aop:around method="cardCheck" pointcut-ref="trans"/>
		</aop:aspect>
	</aop:config>
-->
	<beans:bean class="com.iu.s3.interceptor.UpdateInterceptor" id="updateInterceptor"></beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/notice/*"/>
			<exclude-mapping path="/notice/ajaxList"/>
			<exclude-mapping path="/notice/noticeList"/>
			<exclude-mapping path="/notice/noticeSelect"/>	
			<beans:bean class="com.iu.s3.interceptor.AdminInterceptor"></beans:bean>
		</interceptor>
		
		<interceptor>
			<mapping path="/notice/noticeUpdate"/>
			<beans:ref bean="updateInterceptor"/>
		</interceptor>
		
	</interceptors>

	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<tx:annotation-driven proxy-target-class="true"/>
	<context:component-scan base-package="com.iu.s3" />
	
	
	
</beans:beans>
